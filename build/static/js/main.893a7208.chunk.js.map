{"version":3,"sources":["Components/PhoneBook/FormPhonebook.module.css","Components/ContactItem/ContactItem.module.css","Components/Filter/Filter.module.css","Components/Section.module.css","Redux/Phone/phone-actions.js","Redux/Phone/operationApi.js","Redux/Phone/phone_selector.js","Components/PhoneBook/FormPhonebook.jsx","Components/ContactItem/ContactItem.jsx","Components/Filter/Filter.jsx","Components/Section.jsx","App.js","Redux/Phone/phone-reducer.js","Redux/store.js","index.js"],"names":["module","exports","getContactsRequest","createAction","getContactsSuccess","getContactsFailure","addContactsRequest","addSuccess","addFailure","filterChange","deleteContactsRequest","deleteChangeSuccess","deleteChangeFailure","axios","defaults","baseURL","getLoading","state","contacts","loading","getFilter","filter","getAllContacts","items","getUniqContact","createSelector","allContacts","normalizedFilter","toLowerCase","name","includes","FormPhonebook","number","nameId","shortid","generate","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","some","item","window","alert","reset","onSubmit","console","log","className","styles","form_container","form","this","label","htmlFor","input","type","pattern","title","required","onChange","id","span","btn","Component","connect","dispatch","getState","post","then","data","catch","err","addContact","onDeleteContact","contactId","delete","error","contact_list","map","contact_item","contact_item_name","contact_item_tel","contact_btn","onClick","actions","container","Section","children","defaultProps","App","getContacts","isLoading","LinearProgress","color","a","get","createReducer","_","payload","filterReducer","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","contactsReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,eAAiB,sCAAsC,KAAO,4BAA4B,MAAQ,6BAA6B,MAAQ,6BAA6B,IAAM,6B,mBCA5LD,EAAOC,QAAU,CAAC,aAAe,kCAAkC,kBAAoB,uCAAuC,iBAAmB,sCAAsC,YAAc,mC,mBCArMD,EAAOC,QAAU,CAAC,UAAY,0BAA0B,MAAQ,sBAAsB,MAAQ,wB,mBCA9FD,EAAOC,QAAU,CAAC,MAAQ,uBAAuB,UAAY,6B,+PCChDC,EAAqBC,YAAa,+BAClCC,EAAqBD,YAAa,+BAClCE,EAAqBF,YAAa,gCAElCG,EAAqBH,YAAa,+BAClCI,EAAaJ,YAAa,uBAC1BK,EAAaL,YAAa,uBAE1BM,EAAeN,YAAa,yBAE5BO,EAAwBP,YAAa,kCACrCQ,EAAsBR,YAAa,gCACnCS,EAAsBT,YAAa,gC,iBCAhDU,IAAMC,SAASC,QAAU,wBAElB,I,QCfMC,EAAa,SAACC,GAAD,OAAWA,EAAMC,SAASC,SACvCC,EAAY,SAACH,GAAD,OAAWA,EAAMC,SAASG,QACtCC,EAAiB,SAACL,GAAD,OAAWA,EAAMC,SAASK,OAS3CC,EAAgBC,YAAe,CAACL,EAAUE,IAAiB,SAACD,EAAOK,GAC9E,IAAMC,EAAmBN,EAAOO,cAC/B,OAAOF,EAAYL,QAAO,qBAAGQ,KAC3BD,cAAcE,SAASH,S,OCTtBI,E,4MACJd,MAAQ,CACNY,KAAM,GACNG,OAAQ,I,EAEVC,OAASC,IAAQC,W,EAEjBC,aAAe,SAACC,GAAO,IAAD,EACIA,EAAEC,cAAlBT,EADY,EACZA,KAAMU,EADM,EACNA,MACd,EAAKC,SAAL,eAAiBX,EAAOU,K,EAE1BE,aAAe,SAACJ,GAMd,GALAA,EAAEK,iBAEe,EAAKC,MAAMpB,MAAMqB,MAChC,SAACC,GAAD,OAAUA,EAAKhB,OAAS,EAAKZ,MAAMY,QAOnC,OAJAiB,OAAOC,MAAP,8BACyB,EAAK9B,MAAMY,KADpC,gCAGA,EAAKmB,QAGP,EAAKL,MAAMM,SAAS,EAAKhC,OACzB,EAAK+B,S,EAEPA,MAAQ,WACN,OAAO,EAAKR,SAAS,CAAEX,KAAM,GAAIG,OAAQ,M,4CAG3C,WAEE,OADAkB,QAAQC,IAAI,aAEV,qBAAKC,UAAWC,IAAOC,eAAvB,SACE,uBAAMF,UAAWC,IAAOE,KAAMN,SAAUO,KAAKf,aAA7C,UACE,wBAAOW,UAAWC,IAAOI,MAAOC,QAASF,KAAKvB,OAA9C,iBAEE,uBACEmB,UAAWC,IAAOM,MAClBC,KAAK,OACL/B,KAAK,OACLgC,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRxB,MAAOiB,KAAKvC,MAAMY,KAClBmC,SAAUR,KAAKpB,aACf6B,GAAIT,KAAKvB,YAGb,wBAAOmB,UAAWC,IAAOI,MAAzB,UACE,sBAAML,UAAWC,IAAOa,KAAxB,iBACA,uBACEd,UAAWC,IAAOM,MAClBC,KAAK,MACL/B,KAAK,SACLgC,QAAQ,+FACRC,MAAM,mlBACNC,UAAQ,EACRxB,MAAOiB,KAAKvC,MAAMe,OAClBgC,SAAUR,KAAKpB,kBAGnB,wBAAQwB,KAAK,SAASR,UAAWC,IAAOc,IAAxC,kC,GA/DkBC,aA+EbC,eARS,SAACpD,GACvB,MAAO,CAACM,MAAOD,EAAeL,OAEL,SAACqD,GAC1B,MAAO,CACLrB,SAAU,gBAAGpB,EAAH,EAAGA,KAAMG,EAAT,EAASA,OAAT,OAAsBsC,EFnDV,SAAC,GAAD,IAAEzC,EAAF,EAAEA,KAAMG,EAAR,EAAQA,OAAR,OAAoB,SAACsC,EAASC,GACtDD,EAAShE,KAETO,IACG2D,KAAK,YAAa,CAAC3C,OAAKG,WACxByC,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAcJ,EAAS/D,EAAWmE,OACvCC,OAAM,SAACC,GAAD,OAASN,EAAS9D,EAAWoE,QE6CKC,CAAW,CAAEhD,OAAMG,gBAGjDqC,CAA6CtC,G,iBCrC7CsC,eARS,SAAApD,GAAK,MAAK,CAChCC,SAAUM,EAAeP,OAEA,SAACqD,GAC1B,MAAO,CACLQ,gBAAiB,SAACb,GAAD,OAAQK,GHNCS,EGMsBd,EHNR,SAACK,GAC3CA,EAAS5D,KAETG,IACGmE,OADH,oBACuBD,IACpBN,MAAK,kBAAMH,EAAS3D,EAAoBoE,OACxCJ,OAAM,SAACM,GAAD,OAAWX,EAAS1D,EAAoBqE,UANtB,IAACF,MGSfV,EA1CK,SAAC,GAAD,IAAGS,EAAH,EAAGA,gBAAiB5D,EAApB,EAAoBA,SAApB,OAClB,gCACG,IACD,oBAAIkC,UAAWC,IAAO6B,aAAtB,SACGhE,EAASiE,KAAI,YAA2B,IAAxBtD,EAAuB,EAAvBA,KAAMoC,EAAiB,EAAjBA,GAAIjC,EAAa,EAAbA,OACzB,OACE,qBAAIoB,UAAWC,IAAO+B,aAAtB,UACG,IACD,uBAAMhC,UAAWC,IAAOgC,kBAAxB,UAA4CxD,EAA5C,OACA,sBAAMuB,UAAWC,IAAOiC,iBAAxB,SAA2CtD,IAAe,IAC1D,wBACE4B,KAAK,SACLR,UAAWC,IAAOkC,YAClBC,QAAS,kBAAMV,EAAgBb,IAHjC,sBAJuCA,QAczC,U,iBCQKI,eATS,SAACpD,EAAO0B,GAC9B,MAAO,CAAEJ,MAAOnB,EAAUH,OAGD,SAACqD,GAC1B,MAAO,CACLN,SAAU,SAAC3B,GAAD,OAAOiC,EAASmB,EAAqBpD,EAAEC,cAAcC,YAGpD8B,EA3BA,SAAC,GAAD,IAAG9B,EAAH,EAAGA,MAAOyB,EAAV,EAAUA,SAAV,OACb,qBAAKZ,UAAWC,IAAOqC,UAAvB,SACE,wBAAOtC,UAAWC,IAAOI,MAAzB,iCAEE,uBACEL,UAAWC,IAAOM,MAClBC,KAAK,OACLrB,MAAOA,EACPyB,SAAUA,IACT,Y,iBCdH2B,EAAU,SAAC,GAAD,IAAG7B,EAAH,EAAGA,MAAO8B,EAAV,EAAUA,SAAV,OACd,0BAASxC,UAAWC,IAAOqC,UAA3B,UACE,oBAAItC,UAAWC,IAAOS,MAAtB,SAA8BA,IAC7B8B,MAGLD,EAAQE,aAAe,CACrB/B,MAAO,IAKM6B,I,IAAAA,ICFTG,G,uKAEJ,WACEtC,KAAKb,MAAMoD,gB,oBAEb,WACA,OACE,gCACE,eAAC,EAAD,CAASjC,MAAM,YAAf,UACCN,KAAKb,MAAMqD,WAAc,cAACC,EAAA,EAAD,CAAgBC,MAAM,cAC9C,cAAC,EAAD,OAGF,eAAC,EAAD,CAASpC,MAAM,gBAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IAAgB,c,GAfNM,aA8BHC,gBARS,SAAApD,GAAK,MAAK,CAChC+E,UAAWhF,EAAWC,OAGG,SAAAqD,GAAQ,MAAK,CACtCyB,YAAa,kBAAMzB,ENvBK,uCAAM,WAAOA,GAAP,iBAAA6B,EAAA,6DAC9B7B,EAASpE,KADqB,kBAGLW,IAAMuF,IAAI,aAHL,gBAGpB1B,EAHoB,EAGpBA,KAERJ,EAASlE,EAAmBsE,IALA,gDAO5BJ,EAASjE,EAAmB,EAAD,KAPC,yDAAN,2DM0BXgE,CAA6CyB,I,8DC1BtDvE,GAAQ8E,YAAc,IAAD,mBACxBjG,GAAqB,SAACkG,EAAD,YAAMC,WADH,cAExBhG,GAAa,SAACU,EAAD,OAAUsF,EAAV,EAAUA,QAAV,6BAA4BtF,GAA5B,CAAmCsF,OAFxB,cAIxB5F,GAAsB,SAACM,EAAD,OAAUsF,EAAV,EAAUA,QAAV,oBAClBtF,EAAMI,QAAO,qBAAG4C,KAAgBsC,SALZ,IASrBtB,GAAQoB,YAAc,KAAM,IAC5BG,GAAgBH,YAAc,GAAD,eAChC5F,GAAe,SAACQ,EAAD,YAAUsF,YAGtBpF,GAAUkF,aAAc,GAAD,mBAC1BnG,GAAqB,kBAAM,KADD,cAE1BE,GAAqB,kBAAM,KAFD,cAG1BC,GAAqB,kBAAM,KAHD,cAI1BC,GAAqB,kBAAM,KAJD,cAK1BC,GAAa,kBAAM,KALO,cAM1BC,GAAa,kBAAM,KANO,cAO1BC,GAAe,kBAAM,KAPK,cAQ1BC,GAAwB,kBAAM,KARJ,cAS1BC,GAAsB,kBAAM,KATF,cAU1BC,GAAsB,kBAAM,KAVF,IAad6F,gBAAgB,CAC7BlF,SACAF,OAAQmF,GACRvB,SACA9D,aC3BIuF,GAAU,uBACXC,YAAqB,CACtBC,kBAAmB,CACjBC,eAAgB,CAACC,KAAOC,KAAWC,KAAOC,KAASC,KAAOC,UAHhD,CAMdC,OAiBaC,GAXDC,YAAe,CAC3BC,QAAS,CACPrG,SAAUsG,IAEZd,cACAe,UAAUC,IC5BZC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUR,MAAOA,GAAjB,SAEI,cAAC,GAAD,QAINS,SAASC,eAAe,W","file":"static/js/main.893a7208.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form_container\":\"FormPhonebook_form_container__1FM_A\",\"form\":\"FormPhonebook_form__3azZE\",\"input\":\"FormPhonebook_input__3Z0ee\",\"label\":\"FormPhonebook_label__13UDf\",\"btn\":\"FormPhonebook_btn__3C7Lb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact_list\":\"ContactItem_contact_list__2EUZb\",\"contact_item_name\":\"ContactItem_contact_item_name__1PBTl\",\"contact_item_tel\":\"ContactItem_contact_item_tel___lriG\",\"contact_btn\":\"ContactItem_contact_btn__1TwP0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Filter_container__3lgTy\",\"input\":\"Filter_input__3CtKv\",\"label\":\"Filter_label__2jkPM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__1ir1N\",\"container\":\"Section_container__3D87A\"};","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const getContactsRequest = createAction(\"contacts/getContactsRequest\");\r\nexport const getContactsSuccess = createAction(\"contacts/getContactsSuccess\");\r\nexport const getContactsFailure = createAction(\"contacts/getContactsFailurer\");\r\n\r\nexport const addContactsRequest = createAction(\"contacts/addContactsRequest\");\r\nexport const addSuccess = createAction(\"contacts/addSuccess\");\r\nexport const addFailure = createAction(\"contacts/addFailure\");\r\n\r\nexport const filterChange = createAction(\"contacts/filterChange\");\r\n\r\nexport const deleteContactsRequest = createAction(\"contacts/deleteContactsRequest\");\r\nexport const deleteChangeSuccess = createAction(\"contacts/deleteChangeSuccess\");\r\nexport const deleteChangeFailure = createAction(\"contacts/deleteChangeFailure\");\r\n","import {\r\n  getContactsRequest,\r\n  getContactsSuccess,\r\n  getContactsFailure,\r\n  addContactsRequest,\r\n  addSuccess,\r\n  addFailure,\r\n  deleteContactsRequest,\r\n  deleteChangeSuccess,\r\n  deleteChangeFailure,\r\n} from \"./phone-actions\";\r\n// * as actions\r\nimport axios from \"axios\";\r\n\r\naxios.defaults.baseURL = 'http://localhost:4040';\r\n\r\nexport const getContact = () => async (dispatch) => {\r\n  dispatch(getContactsRequest());\r\n  try {\r\n    const { data } = await axios.get('/contacts');\r\n\r\n    dispatch(getContactsSuccess(data));\r\n  } catch (error) {\r\n    dispatch(getContactsFailure(error));\r\n  }\r\n  // axios\r\n  //   .get(\"/contacts\")\r\n  //   .then(({ data }) => dispatch(getContactsSuccess(data)))\r\n  //   .catch((err) => dispatch(getContactsFailure(err)));\r\n};\r\n\r\nexport const addContact = ({name, number}) => (dispatch,getState) => {\r\n  dispatch(addContactsRequest());\r\n \r\n  axios\r\n    .post('/contacts', {name,number})\r\n    .then(({ data }) => dispatch(addSuccess(data)))\r\n    .catch((err) => dispatch(addFailure(err)));\r\n};\r\nexport const deleteContact = (contactId) => (dispatch) => {\r\n  dispatch(deleteContactsRequest());\r\n\r\n  axios\r\n    .delete(`/contacts/${contactId}`)\r\n    .then(() => dispatch(deleteChangeSuccess(contactId)))\r\n    .catch((error) => dispatch(deleteChangeFailure(error)));\r\n};\r\n","import { createSelector } from 'reselect';\r\nexport const getLoading = (state) => state.contacts.loading;\r\nexport const getFilter = (state) => state.contacts.filter;\r\nexport const getAllContacts = (state) => state.contacts.items;\r\n// export const getUniqContact = (state) => {\r\n//   const filter = getFilter(state);\r\n//   const normalizedFilter = filter.toLowerCase();\r\n//   const allContacts = getAllContacts(state);\r\n//   return allContacts.filter(({ name }) =>\r\n//     name.toLowerCase().includes(normalizedFilter)\r\n//   );\r\n// };\r\nexport const getUniqContact =createSelector([getFilter,getAllContacts], (filter,allContacts)=>{\r\n  const normalizedFilter = filter.toLowerCase();\r\n   return allContacts.filter(({ name }) =>\r\nname.toLowerCase().includes(normalizedFilter))})\r\n// export const getItems= state=>state.contacts\r\n","import shortid from \"shortid\";\r\nimport { Component } from \"react\";\r\nimport styles from \"./FormPhonebook.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { addContact } from \"../../Redux/Phone/operationApi\";\r\nimport {getAllContacts} from \"../../Redux/Phone/phone_selector\";\r\nclass FormPhonebook extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n  nameId = shortid.generate();\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const sameName = this.props.items.some(\r\n      (item) => item.name === this.state.name\r\n    );\r\n    if (sameName) {\r\n      window.alert(\r\n        `LocalHost:3000 says ${this.state.name} is already in contact`\r\n      );\r\n      this.reset();\r\n      return;\r\n    }\r\n    this.props.onSubmit(this.state);\r\n    this.reset();\r\n  };\r\n  reset = () => {\r\n    return this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    console.log(\"re-render\")\r\n    return (\r\n      <div className={styles.form_container}>\r\n        <form className={styles.form} onSubmit={this.handleSubmit}>\r\n          <label className={styles.label} htmlFor={this.nameId}>\r\n            Name\r\n            <input\r\n              className={styles.input}\r\n              type=\"text\"\r\n              name=\"name\"\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n              value={this.state.name}\r\n              onChange={this.handleChange}\r\n              id={this.nameId}\r\n            />\r\n          </label>\r\n          <label className={styles.label}>\r\n            <span className={styles.span}>Tel</span>\r\n            <input\r\n              className={styles.input}\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\r\n              title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\r\n              required\r\n              value={this.state.number}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n          <button type=\"submit\" className={styles.btn}>\r\n            Add contact\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {items: getAllContacts(state)}\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onSubmit: ({ name, number }) => dispatch(addContact({ name, number })),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FormPhonebook);\r\n","import styles from \"./ContactItem.module.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteContact } from \"../../Redux/Phone/operationApi\";\r\nimport { getUniqContact } from \"../../Redux/Phone/phone_selector\";\r\n\r\nconst ContactItem = ({ onDeleteContact, contacts }) => (\r\n  <div>\r\n    {\" \"}\r\n    <ul className={styles.contact_list}>\r\n      {contacts.map(({ name, id, number }) => {\r\n        return (\r\n          <li className={styles.contact_item} key={id}>\r\n            {\" \"}\r\n            <span className={styles.contact_item_name}>{name}:</span>\r\n            <span className={styles.contact_item_tel}>{number}</span>{\" \"}\r\n            <button\r\n              type=\"submit\"\r\n              className={styles.contact_btn}\r\n              onClick={() => onDeleteContact(id)}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>{\" \"}\r\n  </div>\r\n);\r\nContactItem.propTypes = {\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number,\r\n      name: PropTypes.string,\r\n      number: PropTypes.string,\r\n    })\r\n  ).isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: getUniqContact(state),\r\n});\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onDeleteContact: (id) => dispatch(deleteContact(id)),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactItem);\r\n","import PropTypes from \"prop-types\";\r\n\r\nimport styles from \"./Filter.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../Redux/Phone/phone-actions\";\r\nimport {getFilter} from \"../../Redux/Phone/phone_selector\"\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <div className={styles.container}>\r\n    <label className={styles.label}>\r\n      Find contact by name\r\n      <input\r\n        className={styles.input}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChange}\r\n      />{\" \"}\r\n    </label>\r\n  </div>\r\n);\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  return { value: getFilter(state) };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onChange: (e) => dispatch(actions.filterChange(e.currentTarget.value)),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import PropTypes from \"prop-types\";\r\nimport styles from \"../Components/Section.module.css\";\r\nconst Section = ({ title, children }) => (\r\n  <section className={styles.container}>\r\n    <h2 className={styles.title}>{title}</h2>\r\n    {children}\r\n  </section>\r\n);\r\nSection.defaultProps = {\r\n  title: \"\",\r\n};\r\nSection.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\nexport default Section;\r\n","import { Component } from \"react\";\nimport \"./App.css\";\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport FormPhonebook from \"./Components/PhoneBook\";\nimport ContactItem from \"./Components/ContactItem\";\nimport Filter from \"./Components/Filter\";\nimport Section from \"./Components/Section\";\nimport { connect } from \"react-redux\";\nimport {getContact}  from \"./Redux/Phone/operationApi\"\nimport {getLoading} from \"./Redux/Phone/phone_selector\"\n\n\nclass App extends Component {\n  // function App () \n  componentDidMount() {\n    this.props.getContacts();\n  }\n  render() {\n  return (\n    <div>\n      <Section title=\"Phonebook\">\n      {this.props.isLoading &&  <LinearProgress color=\"secondary\" />}\n        <FormPhonebook />\n     \n      </Section>\n      <Section title=\"Contacts list\">\n        <Filter />\n        <ContactItem />{\" \"}\n      </Section>\n    </div>\n  );\n}}\n\n\nconst mapStateToProps = state => ({\n  isLoading: getLoading(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getContacts: () => dispatch(getContact()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n// export default App;\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport { createSelector } from 'reselect';\r\nimport {\r\n  getContactsSuccess,\r\n  addSuccess,\r\n  deleteChangeSuccess,\r\n  filterChange,\r\n  getContactsRequest,\r\n  getContactsFailure,\r\n  addContactsRequest,\r\n  addFailure,\r\n  deleteChangeFailure,\r\n  deleteContactsRequest,\r\n} from \"./phone-actions\";\r\n\r\nconst items = createReducer([], {\r\n  [getContactsSuccess]: (_, { payload }) => payload,\r\n  [addSuccess]: (state, { payload }) => [...state, payload],\r\n\r\n  [deleteChangeSuccess]: (state, { payload }) => [\r\n    ...state.filter(({ id }) => id !== payload),\r\n  ],\r\n});\r\n\r\nconst error = createReducer(null, {});\r\nconst filterReducer = createReducer(\"\", {\r\n  [filterChange]: (state, { payload }) => payload,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [getContactsRequest]: () => true,\r\n  [getContactsSuccess]: () => false,\r\n  [getContactsFailure]: () => false,\r\n  [addContactsRequest]: () => true,\r\n  [addSuccess]: () => false,\r\n  [addFailure]: () => false,\r\n  [filterChange]: () => false,\r\n  [deleteContactsRequest]: () => true,\r\n  [deleteChangeSuccess]: () => false,\r\n  [deleteChangeFailure]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter: filterReducer,\r\n  error,\r\n  loading,\r\n});\r\n","import {\r\n  persistStore,\r\n  // persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport logger from \"redux-logger\";\r\nimport contactsReducer from \"./Phone/phone-reducer\";\r\n\r\n// const persistConfig = {\r\n//   key: \"phoneBooks\",\r\n//   storage,\r\n//   blacklist:[\"filter\"],\r\n// };\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n// const rootReducer = combineReducers({ contacts: contactsReducer });\r\n\r\n// const persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\n// const persistor = persistStore(store);\r\n// eslint-disable-next-line\r\n// export default { store, persistor };\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n// import { PersistGate } from \"redux-persist/integration/react\";\nimport \"modern-normalize/modern-normalize.css\";\nimport { Provider } from \"react-redux\";\nimport  store from \"./Redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={null} persistor={store.persistor}> */}\n        <App />\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}